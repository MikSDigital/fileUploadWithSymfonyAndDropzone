{% extends 'base.html.twig' %}

{% block body %}
    <div id="wrapper">
        <h1>File Upload using Dropzone</h1>
        <div id="container" class="row col-sm-10 col-sm-offset-1">
            {#{{ form_start(form) }}#}
            {#{{ form_widget(form) }}#}
            <div class="form-group">
                <label class="col-sm-2 control-label required" for="">Add Image</label>
                <div class="col-sm-10">
                    <div class="dropzone"></div>
                </div>
            </div>
            {#
             Hidden fields used to store the id, filename of the inserted record.
             These can also be inserted via your form as unmapped properties.
             #}
            <input type="hidden" id="linked_ID">
            <input type="hidden" id="fileName">
            <div class="col-xs-4 pull-right">
                <input type="submit" class="btn btn-block btn-primary" value="Add" />
            </div>
            {#{{ form_end(form) }}#}

        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // init,configure dropzone
        Dropzone.autoDiscover = false;
        var dropzone_default = new Dropzone(".dropzone", {
            url: '{{ path('fileuploadhandler') }}' ,
            maxFiles: 1,
            dictMaxFilesExceeded: 'Only 1 Image can be uploaded',
            acceptedFiles: 'image/*',
            maxFilesize: 3,  // in Mb
            addRemoveLinks: true,
            init: function () {
                this.on("maxfilesexceeded", function(file) {
                    this.removeFile(file);
                });
                this.on("sending", function(file, xhr, formData) {
                    // send additional data with the file as POST data.
                    formData.append("key", "value");
                });
                this.on("success", function(file, response) {
                    iziToast.show({
                        title: 'Success!',
                        message: 'File Uploaded: <b>'+ response.originalFileName +'</b>.<br>Saved as ' + response.fileName,
                        color: 'green',
                        position: 'topCenter'
                    });
                    // set the id,filename from the response
                    $('#fileName').val(response.fileName);
                    $('#linked_ID').val(response.mediaEntityId);

                });
                this.on("removedfile", function(file) {
                    var fileName = $('#fileName').val();
                    var linkedId = $('#linked_ID').val();

                    // Delete file from server
                    $.ajax({
                        type: 'POST',
                        url: '{{ path('deleteFileResource') }}',
                        data: {
                            id: linkedId,
                            fileName: fileName
                        },
                        dataType: 'json'
                    }).done(function (resp) {
                        if (resp.deleted) {
                            iziToast.show({
                                title: 'Deleted!',
                                message: 'Deleted File: <b>'+ fileName + '</b>.',
                                color: 'yellow',
                                position: 'topCenter'
                            });
                        } else if (resp.error) {
                            iziToast.show({
                                title: 'Error!',
                                message: resp.error,
                                color: 'red',
                                position: 'topCenter'
                            });
                        }
                    }).fail(function(resp) {
                        console.error('xhr failed', resp);
                        return false;
                    });
                });
                // this event is required only to debug errors
                this.on("error", function(file, errorMessage) {
                    console.error('Error', errorMessage);
                    iziToast.show({
                        title: 'Upload Failed',
                        message: errorMessage,
                        color: 'red',
                        position: 'topCenter'
                    });
                });
            }
        });
    </script>
{% endblock %}
